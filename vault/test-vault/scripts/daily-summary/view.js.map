{"mappings":"A,C,KCWA,IAAM,EAAc,CAAC,EAAe,IAClC,AAAI,AAAoB,QAApB,EAAM,MAAM,IAEP,OAAO,EAAM,MAAM,EAAG,KAAQ,CAAA,GAAQ,IAAA,EAE3C,AAAoB,QAApB,EAAM,MAAM,IACP,OAAO,EAAM,MAAM,EAAG,KAAQ,CAAA,GAAQ,GAAA,EAExC,OAAO,GAGV,EAAU,AAAC,GAAgB,KAAK,MAAM,GAAK,iBAO7C,EAAwB,EAAE,CAC1B,EAA2B,EAAE,CAC7B,EAAwB,EAAE,CACxB,EAAa,MAAM,KACvB,GAAG,UAAU,KAAK,MAAM,IAAI,AAAC,GAAM,EAAE,WACrC,OACF,EAAW,QAAQ,AAAC,IAClB,GAAI,EAAS,MAAO,CAClB,GAAM,CAAC,EAAM,EAAM,CAAG,EAAS,MAAM,MAAM,KAC3C,EAAS,KAAK,CAAE,KAAA,EAAM,MAAA,CAAM,GAC5B,MACF,CACA,GAAI,EAAS,SAAU,CACrB,GAAM,CAAC,EAAM,EAAM,CAAG,EAAS,SAAS,MAAM,KAC9C,EAAY,KAAK,CAAE,KAAA,EAAM,MAAA,CAAM,GAC/B,MACF,CACA,GAAI,EAAS,OAAQ,CACnB,GAAM,CAAC,EAAM,EAAM,CAAG,EAAS,OAAO,MAAM,KAC5C,EAAS,KAAK,CAAE,KAAA,EAAM,MAAA,CAAM,EAC9B,CACF,GACA,IAAM,EAAgB,EAAS,OAC7B,CAAC,EAAI,IAAO,EAAK,EAAY,EAAG,MAAO,GAAG,UAAU,eACpD,GAEI,EAAmB,EAAY,OACnC,CAAC,EAAI,IAAO,EAAK,EAAY,EAAG,MAAO,GAAG,UAAU,eACpD,GAEI,EAAgB,EAAS,OAC7B,CAAC,EAAI,IAAO,EAAK,EAAY,EAAG,MAAO,GAAG,UAAU,eACpD,GAEW,GAAG,UAAU,CAAC,gBAAgB,EAAE,EAAQ,GAAe,CAAC,EACjE,EAAmB,GACrB,GAAG,UAAU,CAAC,4BAA4B,EAAE,EAAQ,GAAkB,CAAC,EACrE,EAAgB,GACJ,GAAG,UAAU,CAAC,gBAAgB,EAAE,EAAQ,GAAe,CAAC,EAExE,IAAM,EAAQ,EAAgB,EACxB,EAAO,GAAG,UAAU,CAAC,iBAAiB,EAAE,EAAQ,GAAO,IAAI,CAAC,CAClE,CAAA,EAAK,MAAM,MAAQ,EAAQ,EAAI,QAAU,K,C","sources":["<anon>","src/daily-summary/src/view.ts"],"sourcesContent":["(() => {\n/**\n * @example\n * // in dataview.js\n * dv.view(\"daily-summary\")\n */ const $3abe24a1c1b17000$var$key = \"spent\";\n// const getExpenses = _lists => Array.from(_lists.map(t => t.children)).flat().filter(c => c.spent).map(e => {\n//   const [name, price] = e.spent.split('-');\n//   return {name, price}\n// })\nconst $3abe24a1c1b17000$var$textToPrice = (price, rate)=>{\n    if (price.slice(-3) === \"eur\") // default euro rate if no rate was given\n    return Number(price.slice(0, -3)) * (rate ?? 1350);\n    if (price.slice(-3) === \"brl\") return Number(price.slice(0, -3)) * (rate ?? 250);\n    return Number(price);\n};\nconst $3abe24a1c1b17000$var$delimit = (num)=>Math.round(num).toLocaleString();\nlet $3abe24a1c1b17000$var$expenses = [];\nlet $3abe24a1c1b17000$var$expenseAlts = [];\nlet $3abe24a1c1b17000$var$earnings = [];\nconst $3abe24a1c1b17000$var$childLists = Array.from(dv.current().file.lists.map((t)=>t.children)).flat();\n$3abe24a1c1b17000$var$childLists.forEach((listItem)=>{\n    if (listItem.spent) {\n        const [name, price] = listItem.spent.split(\"-\");\n        $3abe24a1c1b17000$var$expenses.push({\n            name: name,\n            price: price\n        });\n        return;\n    }\n    if (listItem.spentAlt) {\n        const [name, price] = listItem.spentAlt.split(\"-\");\n        $3abe24a1c1b17000$var$expenseAlts.push({\n            name: name,\n            price: price\n        });\n        return;\n    }\n    if (listItem.earned) {\n        const [name, price] = listItem.earned.split(\"-\");\n        $3abe24a1c1b17000$var$earnings.push({\n            name: name,\n            price: price\n        });\n    }\n});\nconst $3abe24a1c1b17000$var$totalExpenses = $3abe24a1c1b17000$var$expenses.reduce((ac, cv)=>ac + $3abe24a1c1b17000$var$textToPrice(cv.price, dv.current().koreanWonRate), 0);\nconst $3abe24a1c1b17000$var$totalAltExpenses = $3abe24a1c1b17000$var$expenseAlts.reduce((ac, cv)=>ac + $3abe24a1c1b17000$var$textToPrice(cv.price, dv.current().koreanWonRate), 0);\nconst $3abe24a1c1b17000$var$totalEarnings = $3abe24a1c1b17000$var$earnings.reduce((ac, cv)=>ac + $3abe24a1c1b17000$var$textToPrice(cv.price, dv.current().koreanWonRate), 0);\nconst $3abe24a1c1b17000$var$pExp = dv.paragraph(`total expenses: ${$3abe24a1c1b17000$var$delimit($3abe24a1c1b17000$var$totalExpenses)}`);\nif ($3abe24a1c1b17000$var$totalAltExpenses > 0) dv.paragraph(`total alternative expenses: ${$3abe24a1c1b17000$var$delimit($3abe24a1c1b17000$var$totalAltExpenses)}`);\nif ($3abe24a1c1b17000$var$totalEarnings > 0) {\n    const pEarn = dv.paragraph(`total earnings: ${$3abe24a1c1b17000$var$delimit($3abe24a1c1b17000$var$totalEarnings)}`);\n}\nconst $3abe24a1c1b17000$var$total = $3abe24a1c1b17000$var$totalEarnings - $3abe24a1c1b17000$var$totalExpenses;\nconst $3abe24a1c1b17000$var$pSum = dv.paragraph(`ðŸ’°Today's Total: ${$3abe24a1c1b17000$var$delimit($3abe24a1c1b17000$var$total)} KRW`);\n$3abe24a1c1b17000$var$pSum.style.color = $3abe24a1c1b17000$var$total > 0 ? \"green\" : \"red\";\n\n})();\n//# sourceMappingURL=view.js.map\n","/**\n * @example\n * // in dataview.js\n * dv.view(\"daily-summary\")\n */\nconst key = 'spent';\n// const getExpenses = _lists => Array.from(_lists.map(t => t.children)).flat().filter(c => c.spent).map(e => {\n//   const [name, price] = e.spent.split('-');\n//   return {name, price}\n// })\n\nconst textToPrice = (price: string, rate: number) => {\n  if (price.slice(-3) === 'eur') {\n    // default euro rate if no rate was given\n    return Number(price.slice(0, -3)) * (rate ?? 1350);\n  }\n  if (price.slice(-3) === 'brl') {\n    return Number(price.slice(0, -3)) * (rate ?? 250);\n  }\n  return Number(price);\n};\n\nconst delimit = (num: number) => Math.round(num).toLocaleString();\n// const expenses = getExpenses(dv.current().file.lists);\n// const earnings = getEarnings(dv.current().file.lists)\ninterface PriceItem {\n  name: string;\n  price: string;\n}\nlet expenses: PriceItem[] = [];\nlet expenseAlts: PriceItem[] = [];\nlet earnings: PriceItem[] = [];\nconst childLists = Array.from(\n  dv.current().file.lists.map((t) => t.children)\n).flat();\nchildLists.forEach((listItem) => {\n  if (listItem.spent) {\n    const [name, price] = listItem.spent.split('-');\n    expenses.push({ name, price });\n    return;\n  }\n  if (listItem.spentAlt) {\n    const [name, price] = listItem.spentAlt.split('-');\n    expenseAlts.push({ name, price });\n    return;\n  }\n  if (listItem.earned) {\n    const [name, price] = listItem.earned.split('-');\n    earnings.push({ name, price });\n  }\n});\nconst totalExpenses = expenses.reduce(\n  (ac, cv) => ac + textToPrice(cv.price, dv.current().koreanWonRate),\n  0\n);\nconst totalAltExpenses = expenseAlts.reduce(\n  (ac, cv) => ac + textToPrice(cv.price, dv.current().koreanWonRate),\n  0\n);\nconst totalEarnings = earnings.reduce(\n  (ac, cv) => ac + textToPrice(cv.price, dv.current().koreanWonRate),\n  0\n);\nconst pExp = dv.paragraph(`total expenses: ${delimit(totalExpenses)}`);\nif (totalAltExpenses > 0)\n  dv.paragraph(`total alternative expenses: ${delimit(totalAltExpenses)}`);\nif (totalEarnings > 0) {\n  const pEarn = dv.paragraph(`total earnings: ${delimit(totalEarnings)}`);\n}\nconst total = totalEarnings - totalExpenses;\nconst pSum = dv.paragraph(`ðŸ’°Today's Total: ${delimit(total)} KRW`);\npSum.style.color = total > 0 ? 'green' : 'red';\n"],"names":["$3abe24a1c1b17000$var$textToPrice","price","rate","slice","Number","$3abe24a1c1b17000$var$delimit","num","Math","round","toLocaleString","$3abe24a1c1b17000$var$expenses","$3abe24a1c1b17000$var$expenseAlts","$3abe24a1c1b17000$var$earnings","$3abe24a1c1b17000$var$childLists","Array","from","dv","current","file","lists","map","t","children","flat","forEach","listItem","spent","name","split","push","spentAlt","earned","$3abe24a1c1b17000$var$totalExpenses","reduce","ac","cv","koreanWonRate","$3abe24a1c1b17000$var$totalAltExpenses","$3abe24a1c1b17000$var$totalEarnings","paragraph","$3abe24a1c1b17000$var$total","$3abe24a1c1b17000$var$pSum","style","color"],"version":3,"file":"view.js.map"}